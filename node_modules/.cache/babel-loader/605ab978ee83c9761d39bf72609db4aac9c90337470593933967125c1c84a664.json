{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\camer\\\\source\\\\repos\\\\ReactMovies\\\\frontend\\\\src\\\\MovieList.tsx\";\n// import { useState } from 'react';\nimport data from './MovieData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst movies = data.MovieData;\nfunction MovieList() {\n  //   const [listOfMovies, setMovies] = useState(movies);\n  //   const addMovie = () => {\n  //     setMovies([...movies, {}]);\n  //   };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Joel Hilton's Movie Collection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Director\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edited\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: movies.map(m => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: m.Category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: m.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: m.Year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: m.Director\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: m.Rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: m.Edited\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["data","jsxDEV","_jsxDEV","Fragment","_Fragment","movies","MovieData","MovieList","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","m","Category","Title","Year","Director","Rating","Edited","_c","$RefreshReg$"],"sources":["C:/Users/camer/source/repos/ReactMovies/frontend/src/MovieList.tsx"],"sourcesContent":["// import { useState } from 'react';\r\nimport data from './MovieData.json';\r\n\r\nconst movies = data.MovieData;\r\n\r\nfunction MovieList() {\r\n  //   const [listOfMovies, setMovies] = useState(movies);\r\n  //   const addMovie = () => {\r\n  //     setMovies([...movies, {}]);\r\n  //   };\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>Joel Hilton's Movie Collection</h1>\r\n      </div>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Category</th>\r\n            <th>Title</th>\r\n            <th>Year</th>\r\n            <th>Director</th>\r\n            <th>Rating</th>\r\n            <th>Edited</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {movies.map((m) => (\r\n            <tr>\r\n              <td>{m.Category}</td>\r\n              <td>{m.Title}</td>\r\n              <td>{m.Year}</td>\r\n              <td>{m.Director}</td>\r\n              <td>{m.Rating}</td>\r\n              <td>{m.Edited}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {/* <button className=\"btn btn-primary\" onClick={addMovie}>\r\n        Add New Movie\r\n      </button> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}